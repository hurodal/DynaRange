name: Build Windows Portable Installer

on:
  workflow_dispatch:   # solo manual

jobs:
  build-windows-portable-installer:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-opencv
            mingw-w64-x86_64-libraw
            mingw-w64-x86_64-eigen3
            mingw-w64-x86_64-cli11
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-wxwidgets3.2-msw
            mingw-w64-x86_64-wxwidgets3.2-common
            wixtoolset

      - name: Configure (CMake)
        shell: msys2 {0}
        run: |
          cmake -G "MinGW Makefiles" \
            -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH=/mingw64 \
            -DBUILD_SHARED_LIBS=ON # Aseguramos que se usen DLLs

      - name: Build
        shell: msys2 {0}
        run: cmake --build build --config Release --parallel

      - name: Copy Required DLLs
        shell: msys2 {0}
        run: |
          cd build
          for dll in $(ldd rango.exe dynaRangeGui.exe | grep -o '/mingw64/bin/[^ ]*' | sort -u); do
            cp "$dll" .
          done

      - name: Generate Installer
        shell: msys2 {0}
        run: |
          cd build
          cpack -G WIX # Genera el archivo .msi

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: dynaRange-windows-installer
          path: |
            build/*.msi # Sube el instalador
            # Opcional: tambi√©n puedes subir la carpeta portable para quienes no quieran instalar
            # build/rango.exe
            # build/dynaRangeGui.exe
            # build/*.dll