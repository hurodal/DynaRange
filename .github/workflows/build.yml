# .github/workflows/build.yml
name: Build dynaRange for Windows (Static Binaries + Installer)

on:
  workflow_dispatch:

jobs:
  build-windows-static:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MSYS2 and Static Dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-opencv
            mingw-w64-x86_64-libraw
            mingw-w64-x86_64-eigen3
            mingw-w64-x86_64-cli11
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-wxwidgets-gtk3

      - name: Configure CMake for Static Build
        run: |
          # 1. Capturar los flags de wxWidgets en variables de entorno
          export WX_CXXFLAGS=$(wx-config --cxxflags)
          export WX_LIBS=$(wx-config --libs all)

          # 2. Ejecutar CMake
          cmake -B build `
            -G "MinGW Makefiles" `
            -DCMAKE_BUILD_TYPE=Release `
            -DBUILD_SHARED_LIBS=OFF `
            -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++"
        shell: msys2 {0}

      - name: Build
        run: cmake --build build --config Release
        shell: msys2 {0}

      - name: Verify Static Linking
        run: |
          ldd build/rango.exe || echo "rango.exe is statically linked (no dynamic deps found)"
          ldd build/dynaRangeGui.exe || echo "dynaRangeGui.exe is statically linked (no dynamic deps found)"
        shell: msys2 {0}

      - name: Create Portable Folder Structure
        run: |
          mkdir dynaRangePortable
          cp build/rango.exe dynaRangePortable/
          cp build/dynaRangeGui.exe dynaRangePortable/
          cp build/logo.png dynaRangePortable/
          cp favicon_owl.ico dynaRangePortable/
          cp favicon_noise.ico dynaRangePortable/
          if [ -f "crear_instalador_windows.nsi" ]; then
            cp crear_instalador_windows.nsi dynaRangePortable/
          fi
        shell: bash

      - name: Check for NSIS script
        id: check_nsis_script
        uses: andstor/file-existence-action@v3
        with:
          files: "crear_instalador_windows.nsi"

      - name: Install NSIS
        if: steps.check_nsis_script.outputs.files_exists == 'true'
        run: choco install nsis -y

      - name: Build Windows Installer with NSIS
        if: steps.check_nsis_script.outputs.files_exists == 'true'
        run: makensis crear_instalador_windows.nsi
        working-directory: ./dynaRangePortable
        shell: bash

      - name: Upload Portable Version Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dynaRange-Windows-Static-Portable
          path: dynaRangePortable/

      - name: Upload Windows Installer Artifact
        if: steps.check_nsis_script.outputs.files_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dynaRange-Windows-Installer
          path: dynaRangePortable/dynaRangeInstaller.exe